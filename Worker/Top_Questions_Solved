create table worker
(
worker_id int primary key identity(1,1),
first_name varchar(15),
last_name varchar(15),
salary money,
joining_date date,
dept varchar(10)
);
insert into worker values
('monika','arora',100000,'2014-02-09','HR'),
('niharika','verma',80000,'2014-06-11','admin'),
('vishal','singhal',300000,'2014-02-20','HR'),
('Amitabh','Singh',500000,'2014-02-20','Admin'),
('Vivek','Bhati',500000,'2014-06-11','Admin'),
('Vipul','Diwan',200000,'2014-06-11','Account'),
('Satish','Kumar',75000,'2014-01-20','Account'),
('Geetika','Chauhan',90000,'2014-04-11','Admin');

select * from worker;

create table bonus
(
worker_ref_id int,
bonus_date date,
bonus_amount money
);

insert into bonus values
(1,'2016-02-20',5000),
(2,'2016-06-11',3000),
(3,'2016-02-20',4000),
(1,'2016-02-20',4500),
(2,'2016-06-11',3500);

select * from bonus;

create table title
(
worker_ref_id int,
worker_title varchar(15),
affected_from date
);

insert into title values
(1,'Manager', '2016-02-20'),
(2,'Executive','2016-06-11'),
(8,'Executive','2016-06-11'),
(5,'Manager','2016-06-11'),
(4,'Asst.Manager','2016-06-11'),
(7,'Executive','2016-06-11'),
(6,'Lead','2016-06-11'),
(3,'Lead','2016-06-11');

select * from worker;
select * from bonus;
select * from title;

--Q1  Write an SQL query to fetch “FIRST_NAME” from Worker table using the alias name as <WORKER_NAME>.
select first_name [Worker_Name] from worker;

--Q2  Write an SQL query to fetch “FIRST_NAME” from Worker table in upper case.
select UPPER(first_name) [Worker_Name] from worker;

--Q3  Write an SQL query to fetch unique values of DEPARTMENT from Worker table.
select * from worker;
select distinct dept from worker;

--Q4  Write an SQL query to print the first three characters of  FIRST_NAME from Worker table.
select SUBSTRING(first_name,1,3) from worker;
select LEFT(first_name,3) from worker;
select right(first_name,2) from worker;

--Q5  Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from Worker table.
select * from worker;
select CHARINDEX('b',first_name) from worker where first_name='Amitabh';

-- Q6  Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.
select RTRIM(first_name) from worker;

--Q7  Write an SQL query to print the DEPARTMENT from Worker table after removing white spaces from the left side.
select LTRIM(dept) from worker;

--Q8  Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.
select distinct dept [department], LEN(dept) [Length] from worker;

--Q9  Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’.
select REPLACE(first_name,'a','A') from worker;

--Q10  Write an SQL query to print the FIRST_NAME and LAST_NAME from Worker table into a single column COMPLETE_NAME. 
--A space char should separate them.
select CONCAT(first_name,' ', last_name) [Complete_Name] from worker;

--Q11  Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
select * from worker order by first_name asc;

--Q12  Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
select * from worker order by first_name asc;
select * from worker order by dept desc;
select * from worker order by first_name asc, dept desc;

--Q13  Write an SQL query to print details for Workers with the first name as “Vipul” and “Satish” from Worker table.
select * from worker where first_name in ('vipul','satish');

--Q14  Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
select * from worker where first_name not in ('vipul','satish');

--Q15  Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
select * from worker where dept='Admin';

--Q16  Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
select * from worker where first_name like '%a%';

--Q17  Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
select * from worker where first_name like '%a';

--Q18  Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
select * from worker where first_name like '%h' and LEN(first_name)=6;

--Q19  Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
select * from worker where salary between 100000 and 500000;

--Q20  Write an SQL query to print details of the Workers who have joined in Feb’2014.
select * from worker where month(joining_date)=2 and YEAR(joining_date)=2014;

--Q21  Write an SQL query to fetch the count of employees working in the department ‘Admin’.
select dept, count(worker_id) [Count] from worker where dept='Admin' group by dept;
select DAY(joining_date) from worker;
--Q22  Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.
select first_name, last_name,salary from worker where salary between 50000 and 100000 order by salary desc;

--Q23  Write an SQL query to fetch the no. of workers for each department in the descending order.
select dept, count(worker_id) [Count] from worker group by dept order by count(worker_id) desc;

--Q24  Write an SQL query to print details of the Workers who are also Managers.
select * from worker;
select * from title;
select * from worker w, title t where w.worker_id=t.worker_ref_id and t.worker_title='Manager';

--Q25  Write an SQL query to fetch duplicate records from title table having matching data in some fields of a table.
select worker_title, affected_from, count(*)[Count] from title group by worker_title, affected_from having count(*)>1 order by count(*);

--Q26  Write an SQL query to show only odd rows from a table.
select * from worker where worker_id % 2=1;

--Q27  Write an SQL query to show only even rows from a table.
select * from worker where worker_id % 2=0;

--Q28  Write an SQL query to clone a new table from another table.
select * into worker_clone from worker where 1=1;
select * from worker;
select * from worker_clone;

--Q29  Write an SQL query to fetch intersecting records of two tables.
(select * from worker) 
intersect 
(select * from worker_clone);

--Q30  Write an SQL query to show records from one table that another table does not have.
select * from worker where worker_id not in (select worker_id from worker_clone);

--Q31  Write an SQL query to show the current date and time.
select GETDATE();

--Q32  Write an SQL query to show the top n (say 10) records of a table.
select top 10 * from worker;

--Q33  Write an SQL query to determine the nth (say n=5) highest salary from a table.
select * from worker order by salary desc;
with cte as
(
select worker_id, first_name, last_name, salary, rownum=ROW_NUMBER() over(order by salary desc) from worker
)
select * from cte where rownum=5;

with cte as
(
select worker_id, first_name, last_name, salary, ranknum=dense_Rank() over(order by salary desc) from worker
)
select * from cte where ranknum=5;


--Q34  Write an SQL query to determine the 5th highest salary without using TOP or limit method.
with cte as
(
select worker_id, first_name, last_name, salary, ranknum=dense_Rank() over(order by salary desc) from worker
)
select * from cte where ranknum=5;


--Q35 Write an SQL query to fetch the list of employees with the same salary.
select * from worker w1, worker w2 where w1.worker_id<>w2.worker_id and w1.salary=w2.salary;

--Q36  Write an SQL query to show the second highest salary from a table.
with cte as
(
select worker_id, first_name, last_name, salary, ranknum=dense_Rank() over(order by salary desc) from worker
)
select * from cte where ranknum=2;


--Q37  Write an SQL query to show one row twice in results from a table.
select first_name, dept from worker w1 where dept='HR'
union all
select first_name, dept from worker w2 where dept='HR';

select * from worker
except
select * from worker_clone;

select * from worker_clone
except
select * from worker;

--Q38  Write an SQL query to fetch intersecting records of two tables.
delete from worker_clone where worker_id in (6,7,8);

select * from worker 
intersect
select * from worker_clone;

--Q39  Write an SQL query to fetch the first 50% records from a table.
select *  from worker where worker_id in (select worker_id/2 from worker);

select top 50 percent * from worker;

--select * from worker where worker_id  exists (select worker_id from worker_clone);

--Q40  Write an SQL query to fetch the departments that have less than five people in it.
select dept, count(worker_id) from worker group by dept having count(worker_id)<5 order by count(worker_id);

--Q41  Write an SQL query to show all departments along with the number of people in there.
select dept, count(worker_id) from worker group by dept;

--Q42  Write an SQL query to show the last record from a table.
select top 1 * from worker order by worker_id desc;

select * from worker where worker_id=(select max(worker_id) from worker);

--Q43  Write an SQL query to fetch the first row of a table.
select * from worker where worker_id=(select min(worker_id) from worker);

select top 1 * from title;
--select  * from title;

--Q44  Write an SQL query to fetch the last five records from a table.
select * from worker where worker_id>(select count(worker_id) from worker)-5;

--Q45  Write an SQL query to print the name of employees having the highest salary in each department.
select * from worker;
with cte as
(select *, ranknum=DENSE_RANK() over (partition by dept order by salary desc) from worker)
select * from cte where ranknum=1;

--  Write an SQL query to print the name of employees having the lowest salary in each department.
with cte as
(select *, ranknum=DENSE_RANK() over (partition by dept order by salary asc) from worker)
select * from cte where ranknum=1;

--Q46  Write an SQL query to fetch three max salaries from a table.
with cte as
(
select worker_id, first_name, last_name, salary, rownum=dense_rank() over(order by salary desc) from worker
)
select * from cte where rownum<=3;

--Q47  Write an SQL query to fetch three min salaries from a table.
with cte as
(
select worker_id, first_name, last_name, salary, rownum=ROW_NUMBER() over(order by salary ASC) from worker
)
select * from cte where rownum<=3;

--Q48  Write an SQL query to fetch nth max salaries from a table.
with cte as
(
select worker_id, first_name, last_name, salary, rownum=dense_rank() over(order by salary desc) from worker
)
select * from cte where rownum=5;

--Q49  Write an SQL query to fetch departments along with the total salaries paid for each of them.
select dept, sum(salary) [Total_Salary] from worker group by dept;

--Q50  Write an SQL query to fetch the names of workers who earn the highest salary.
select first_name, dept, salary from worker where salary=(select max(salary) from worker);

with cte as
(
select *, ranknum=dense_rank() over (order by salary desc) from worker
)
select * from cte where ranknum=1;

